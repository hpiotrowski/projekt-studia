version: '3.8'

services:

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KC_PROXY: "edge"
    volumes:
      - ./volumes/keycloak-data:/opt/keycloak/data
    command: start-dev
    depends_on:
      - keycloak-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - ./volumes/keycloak-db:/var/lib/postgresql/data

  resource-server:
    build: ./resource-server
    container_name: resource-server
    ports:
      - "5001:5001"
    depends_on:
      - db
      - keycloak

  frontend-spa:
    build: ./frontend-spa
    container_name: frontend-spa
    ports:
      - "3000:3000"
    depends_on:
      - resource-server
      - keycloak

  frontend-ssr:
    build: ./frontend-ssr
    container_name: frontend-ssr
    ports:
      - "4000:4000"
    depends_on:
      - resource-server
      - keycloak

  backend2backend-client:
    build: ./b2b-client
    container_name: backend2backend-client
    environment:
      - CLIENT_SECRET=Asbcmz8DreijP9iWzIvoXu3P0wehl4Wc
      - KEYCLOAK_URL=http://keycloak:8080
      - RESOURCE_SERVER_URL=http://resource-server:5001
    ports:
      - "5002:5002"
    depends_on:
      - resource-server
      - keycloak

  db:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_DB: car_rental
      POSTGRES_USER: rental
      POSTGRES_PASSWORD: rental
    volumes:
      - ./volumes/car-rental-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

networks:
  default:
    driver: bridge
